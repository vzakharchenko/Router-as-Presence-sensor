version: 2 # use CircleCI 2.0
jobs:
  build:
    working_directory: ~/smartthings_asus_router # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/node:12.8

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - add_ssh_keys:
          fingerprints:
            - "55:d4:38:8c:6f:4d:a9:d5:95:c0:0e:7a:d6:f1:ee:7e"
#      - run:
#          name: fix host authenticity for production server
#          command: ssh-keyscan -p $SERVER_PORT $SERVER_HOST >> ~/.ssh/known_hosts
      - run:
          name: backend install
          command: npm i
      - run:
          name: ui install
          command: cd router-ui && npm i
      - run:
          name: backend lint
          command: npm run lint
      - run:
          name: ui lint
          command: cd router-ui && npm run lint
      - run:
          name: checkout master
          command: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" $SERVER_USERNAME@$SERVER_HOST -p $SERVER_PORT  'rm -rf /opt/app/asus && cd  /opt/app && git clone https://github.com/vzakharchenko/smartthings_asus_router asus'
      - run:
          name: install backend
          command: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" $SERVER_USERNAME@$SERVER_HOST -p $SERVER_PORT  'cd  /opt/app/asus && npm i'
      - run:
          name: install ui
          command: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" $SERVER_USERNAME@$SERVER_HOST -p $SERVER_PORT  'cd  /opt/app/asus/router-ui && npm i'
      - run:
          name: build ui
          command: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" $SERVER_USERNAME@$SERVER_HOST -p $SERVER_PORT  'cd  /opt/app/asus/router-ui && npm run build:prod'
      - run:
          name: stop service
          command: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" $SERVER_USERNAME@$SERVER_HOST -p $SERVER_PORT  'cd  /opt/app/asus && pm2 stop AsusSmartAppServer.js && pm2 delete AsusSmartAppServer.js'
      - run:
          name: start service
          command: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" $SERVER_USERNAME@$SERVER_HOST -p $SERVER_PORT  'cd  /opt/app/asus && pm2 start AsusSmartAppServer.js  && pm2 save'

